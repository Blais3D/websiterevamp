import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>PokeDex on Blais.gg</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="" href="" />
      </Head>

      <main className="p-6 justify-center items-center">
        <div className="container flex flex-wrap items-center justify-start gap-5">
          <AllPokemon />
        </div>
      </main>
    </>
  );
};

type PokemonCardProps = {
  ID: number;
  name: string;
  types: string[];
  sprite: string;
};

const PokemonCard = ({ ID, name, types, sprite }: PokemonCardProps) => {
  return (
    <section className="flex flex-col w-48 h-48 justify-center items-center p-6 rounded-md border-4 border-gray-400 motion-safe:hover:scale-105 duration-500">
      <h3 className="font-bold text-gray-300">{name}</h3>
      <p className="text-gray-400">{ID}</p>
      <img src={sprite} className="w-full" />
    </section>
  );
};

const AllPokemon = () => {
  const names = trpc.useQuery(["pokemon-get-names", { id: 0 }]);
  const PokeNames: string[] = [];
  for (let i = 0; i < 905; i++) {
    PokeNames.push(names.data?.results[i]?.name as string);
  }
  return (
    <>
      {PokeNames.map((item, index) => {
        return (
          <PokemonCard
            key={index}
            ID={index + 1}
            name={item}
            types={[]}
            sprite={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${
              index + 1
            }.png`}
          />
        );
      })}
    </>
  );
};

export default Home;
